
package pl.edu.agh.soa.lab1;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Holder;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.2
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ManageStudents", targetNamespace = "http://lab1.soa.agh.edu.pl/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ManageStudents {


    /**
     * 
     * @param file
     * @param id
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "newAvatar", targetNamespace = "")
    @RequestWrapper(localName = "addStudentAvatar", targetNamespace = "http://lab1.soa.agh.edu.pl/", className = "pl.edu.agh.soa.lab1.AddStudentAvatar")
    @ResponseWrapper(localName = "addStudentAvatarResponse", targetNamespace = "http://lab1.soa.agh.edu.pl/", className = "pl.edu.agh.soa.lab1.AddStudentAvatarResponse")
    public String addStudentAvatar(
        @WebParam(name = "id", targetNamespace = "")
        String id,
        @WebParam(name = "file", targetNamespace = "")
        byte[] file);

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "hello", targetNamespace = "http://lab1.soa.agh.edu.pl/", className = "pl.edu.agh.soa.lab1.Hello")
    @ResponseWrapper(localName = "helloResponse", targetNamespace = "http://lab1.soa.agh.edu.pl/", className = "pl.edu.agh.soa.lab1.HelloResponse")
    public String hello();

    /**
     * 
     * @param newName
     * @param id
     */
    @WebMethod
    @RequestWrapper(localName = "changeStudentName", targetNamespace = "http://lab1.soa.agh.edu.pl/", className = "pl.edu.agh.soa.lab1.ChangeStudentName")
    @ResponseWrapper(localName = "changeStudentNameResponse", targetNamespace = "http://lab1.soa.agh.edu.pl/", className = "pl.edu.agh.soa.lab1.ChangeStudentNameResponse")
    public void changeStudentName(
        @WebParam(name = "id", targetNamespace = "")
        String id,
        @WebParam(name = "newName", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<String> newName);

    /**
     * 
     * @param id
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "deleteStudent", targetNamespace = "")
    @RequestWrapper(localName = "deleteStudent", targetNamespace = "http://lab1.soa.agh.edu.pl/", className = "pl.edu.agh.soa.lab1.DeleteStudent")
    @ResponseWrapper(localName = "deleteStudentResponse", targetNamespace = "http://lab1.soa.agh.edu.pl/", className = "pl.edu.agh.soa.lab1.DeleteStudentResponse")
    public String deleteStudent(
        @WebParam(name = "id", targetNamespace = "")
        String id);

    /**
     * 
     * @param letter
     * @return
     *     returns java.util.List<pl.edu.agh.soa.lab1.Student>
     */
    @WebMethod
    @WebResult(name = "students", targetNamespace = "")
    @RequestWrapper(localName = "filterStudents", targetNamespace = "http://lab1.soa.agh.edu.pl/", className = "pl.edu.agh.soa.lab1.FilterStudents")
    @ResponseWrapper(localName = "filterStudentsResponse", targetNamespace = "http://lab1.soa.agh.edu.pl/", className = "pl.edu.agh.soa.lab1.FilterStudentsResponse")
    public List<Student> filterStudents(
        @WebParam(name = "letter", targetNamespace = "")
        String letter);

    /**
     * 
     * @param ects
     * @param name
     * @param id
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "newClass", targetNamespace = "")
    @RequestWrapper(localName = "addStudentClasses", targetNamespace = "http://lab1.soa.agh.edu.pl/", className = "pl.edu.agh.soa.lab1.AddStudentClasses")
    @ResponseWrapper(localName = "addStudentClassesResponse", targetNamespace = "http://lab1.soa.agh.edu.pl/", className = "pl.edu.agh.soa.lab1.AddStudentClassesResponse")
    public String addStudentClasses(
        @WebParam(name = "id", targetNamespace = "")
        String id,
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "ects", targetNamespace = "")
        Integer ects);

    /**
     * 
     * @param id
     * @return
     *     returns byte[]
     */
    @WebMethod
    @WebResult(name = "avatar", targetNamespace = "")
    @RequestWrapper(localName = "getStudentAvatar", targetNamespace = "http://lab1.soa.agh.edu.pl/", className = "pl.edu.agh.soa.lab1.GetStudentAvatar")
    @ResponseWrapper(localName = "getStudentAvatarResponse", targetNamespace = "http://lab1.soa.agh.edu.pl/", className = "pl.edu.agh.soa.lab1.GetStudentAvatarResponse")
    public byte[] getStudentAvatar(
        @WebParam(name = "id", targetNamespace = "")
        String id);

    /**
     * 
     * @return
     *     returns java.util.List<pl.edu.agh.soa.lab1.Student>
     */
    @WebMethod
    @WebResult(name = "student", targetNamespace = "")
    @RequestWrapper(localName = "getStudents", targetNamespace = "http://lab1.soa.agh.edu.pl/", className = "pl.edu.agh.soa.lab1.GetStudents")
    @ResponseWrapper(localName = "getStudentsResponse", targetNamespace = "http://lab1.soa.agh.edu.pl/", className = "pl.edu.agh.soa.lab1.GetStudentsResponse")
    public List<Student> getStudents();

    /**
     * 
     * @param name
     * @param id
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "newStudent", targetNamespace = "")
    @RequestWrapper(localName = "addStudent", targetNamespace = "http://lab1.soa.agh.edu.pl/", className = "pl.edu.agh.soa.lab1.AddStudent")
    @ResponseWrapper(localName = "addStudentResponse", targetNamespace = "http://lab1.soa.agh.edu.pl/", className = "pl.edu.agh.soa.lab1.AddStudentResponse")
    public String addStudent(
        @WebParam(name = "id", targetNamespace = "")
        String id,
        @WebParam(name = "name", targetNamespace = "")
        String name);

}
